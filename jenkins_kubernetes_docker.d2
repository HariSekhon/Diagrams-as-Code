#!/usr/bin/env d2 --theme 0
#
#  Author: Hari Sekhon
#  Date: 2023-05-11 01:42:50 +0100 (Thu, 11 May 2023)
#
#  vim:ts=2:sts=2:sw=2:et:filetype=d2
#
#  https://github.com/HariSekhon/Diagrams-as-Code
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help steer this or other code I publish
#
#  https://www.linkedin.com/in/HariSekhon
#

# ============================================================================ #
#               Jenkins on Kubernetes with Auto-Scaling and Docker
# ============================================================================ #

direction: down

title: {
  label: Jenkins on Kubernetes
  near: top-center
  shape: text
  style.font-size: 40
  style.underline: true
}

classes: {
  jenkins: {
    label: Jenkins
    icon: https://diagrams.mingrammer.com/img/resources/onprem/ci/jenkins.png
    shape: image
  }
  docker: {
    label: Docker
    # icon: https://diagrams.mingrammer.com/img/resources/onprem/container/docker.png
    icon: https://icons.terrastruct.com/dev%2Fdocker.svg
    shape: image
  }
  clair: {
    label: Clair
    #icon: https://www.projectquay.io/img/clair-logo-svg-vector.svg
    # from https://github.com/quay/clair
    #icon: https://cloud.githubusercontent.com/assets/343539/21630811/c5081e5c-d202-11e6-92eb-919d5999c77a.png
    # just the icon without the name, from AquaSec security
    #icon: https://lh6.googleusercontent.com/hQqgUGW_dyTn3HHEge2nVAxLsdGdf249Ow0uyKbXcfV8bxpxjEcFugSG3U-DTowCmwbfbecnSnctvwPipewDbFAHh4CkIpTuERZBosEpevr9CBpLmP0zxWNJ-6ACHOP9Pxbw1-JUKs1ykJotHLrx-ZXlPNictVXmNVBkVkRFwGsYeym0Uk1RL5Wkug
    # downloaded in case it disappears from online or link changes and breaks future CI/CD runs
    icon: images/clair.png
    shape: image
  }
  grype: {
    label: Grype
    #icon: https://user-images.githubusercontent.com/5199289/136855393-d0a9eef9-ccf1-4e2b-9d7c-7aad16a567e5.png
    # just icon without word
    icon: https://anchore.com/wp-content/uploads/2021/11/image-111.png
    shape: image
  }
  trivy: {
    label: Trivy
    #icon: https://appsecmap.com/images/d/Trivy.png
    icon: https://diagrams.mingrammer.com/img/resources/onprem/security/trivy.png
    shape: image
  }
  sonarqube: {
    label: SonarQube
    # word icon
    #icon: https://assets-eu-01.kc-usercontent.com/e1f3885c-805a-0150-804f-0996e00cd37d/afadf76d-420e-414d-acff-4a9efb344baa/SonarQubeIcon.svg
    # solid blue, hard to read
    #icon: https://assets-eu-01.kc-usercontent.com/62ab8174-eef6-01d0-2c3c-101910aab0d4/085492c1-74a1-4749-908f-fa94fbd1fc5a/open-graph-sonar.png
    # official website icon
    #icon: https://assets-eu-01.kc-usercontent.com/62ab8174-eef6-01d0-2c3c-101910aab0d4/5590df23-cc3a-4487-a3dd-e5dcb2da8731/sonar-logo-horizontal.svg
    # pic only icon from twitter profile
    icon: https://pbs.twimg.com/profile_images/1500905367433318400/fMj5ti-L_400x400.jpg
    shape: image
  }
  sonarcloud: {
    label: SonarCloud.io
    icon: https://static-00.iconduck.com/assets.00/sonarcloud-icon-512x449-31oqlodh.png
    shape: image
  }
  ingress: {
    label: Kubernetes Ingress
    icon: https://diagrams.mingrammer.com/img/resources/k8s/network/ing.png
    shape: image
  }
  users: {
    label: Users
    icon: https://icons.terrastruct.com/essentials%2F359-users.svg
    # icon: https://diagrams.mingrammer.com/img/resources/onprem/client/users.png
    shape: image
  }
  github: {
    label: GitHub\nrepos
    icon: https://icons.terrastruct.com/dev%2Fgithub.svg
    # icon: https://icons.terrastruct.com/social%2F039-github.svg
    shape: image
  }
  git: {
    label: GitHub repo
    icon: https://icons.terrastruct.com/dev%2Fgit.svg
    shape: image
  }
  nginx: {
    label: Nginx
    # icon: https://icons.terrastruct.com/dev%2Fnginx.svg
    icon: https://diagrams.mingrammer.com/img/resources/onprem/network/nginx.png
    shape: image
  }
  gke: {
    label: GKE
    icon: https://diagrams.mingrammer.com/img/resources/gcp/compute/kubernetes-engine.png
    shape: image
  }
  gcr: {
    label: GCR
    # icon: https://diagrams.mingrammer.com/img/resources/gcp/devtools/container-registry.png
    icon: https://diagrams.mingrammer.com/img/resources/gcp/devtools/container-registry.png
    shape: image
  }
}

users -> gcp.gke.ingress.nginx
users.class: users

#github -> sonarcloud: code scanning
#sonarcloud.class: sonarcloud

#github : GitHub{
  github.class: github
#  repo1.class: git {
#    label: GitHub repo 1
#  }
#  repo2.class: git {
#    label: GitHub repo 2
#  }
#  repo3.class: git {
#    label: GitHub repo 3
#  }
#}

# dockerhub: {
#  label: DockerHub
#  class: docker
# }
#
# quay: Quay.io {
#  icon: https://pics.freeicons.io/uploads/icons/png/21458934601551942638-512.png
#  shape: image
# }

gcp: Google Cloud Platform {
  gcr.class: gcr
  # _.dockerhub -> gke.gke
  # _.quay -> gke.gke
  gcr -> gke.gke: {
    # label: pull\njenkins\ntrivy\ndocker\nimages
    # style.stroke-dash: 5
  }
  gke: Google Kubernetes Engine {
    gke.class: gke
    ingress: Ingress {
      nginx.class: nginx
    }
    ingress.nginx -> jenkins.server
    jenkins: Jenkins Server\npod {
      server.class: jenkins
    }
    _._.github -> jenkins.server: webhook trigger
    _._.github <- jenkins.server: polling SCM (as backup for lost webhooks) { style.stroke-dash: 5 }
    # messy and ugly
    #_._.github.repo1 -> jenkins.server: webhook trigger
    #_._.github.repo2 -> jenkins.server: webhook trigger
    #_._.github.repo3 -> jenkins.server: webhook trigger
    #_._.github.repo1 <- jenkins.server: polling SCM (as backup for lost webhooks) { style.stroke-dash: 5 }
    #_._.github.repo2 <- jenkins.server: polling SCM (as backup for lost webhooks) { style.stroke-dash: 5 }
    #_._.github.repo3 <- jenkins.server: polling SCM (as backup for lost webhooks) { style.stroke-dash: 5 }
    jenkins.server -> jenkins_agent1: Spawn ephemeral Jenkins Agent(s)\n(auto-scales horizontally)
    sonar: SonarQube\npod {
      container.class: sonarqube
    }
    # places sonar on the right of the diagram, giving more balance
    # comes out on the left insted of right
    #sonar -- _._.github {
    #  style.opacity: 0
    #  style.stroke-dash: 5
    #}
    blank: { style.opacity: 0 }
    # forces sonar back to the right
    sonar -- blank: {
      style.opacity: 0
      style.stroke-dash: 5
    }
    clair: Clair\npod {
      container.class: clair
    }
    clair.container -> _.gcr: scan images in registry { style.stroke-dash: 5 }
    jenkins_agent1: Jenkins Agent\npod {
      jnlp -> _.jenkins.server: phones home\nfor CI/CD pipeline\ninstructions
      jnlp.class: Jenkins
      jnlp.label: Jenkins Agent\njnlp container

      gcloud_sdk: GCloud SDK\ncontainer {
        icon: https://icons.terrastruct.com/gcp%2FProducts%20and%20services%2FDeveloper%20Tools%2FCloud%20SDK.svg
        shape: image
      }
      gcloud_sdk <- _._._.github: git clone

      grype.class: grype
      trivy.class: trivy

      docker.class: docker
      docker.label: Docker-in-Docker\ncontainer

      jnlp -> gcloud_sdk: CI/CD Build,\nScan & Deploy\ninstructions
      gcloud_sdk -> _.clair.container: Scan docker images\nfor vulnerabilities
      gcloud_sdk -> _.sonar.container: Scan code
      gcloud_sdk -> trivy: Scan docker images\nfor vulnerabilities
      gcloud_sdk -> grype: Scan docker images\nfor vulnerabilities

      gcloud_sdk -> docker: Docker Build

      trivy -> docker: using\nDOCKER_HOST=\ntcp://localhost:2375
      grype -> docker: using\nDOCKER_HOST=\ntcp://localhost:2375

      trivy -> _._.gcr: { style.stroke-dash: 5 }
      grype -> _._.gcr: { style.stroke-dash: 5 }

      docker -> _._.gcr: push built docker images
      docker <- _._.gcr: pull docker images to test
    }
  }
}
