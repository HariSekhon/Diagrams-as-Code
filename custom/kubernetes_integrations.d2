#!/usr/bin/env d2
#
#  vim:ts=2:sts=2:sw=2:et:filetype=d2
#
#  Author: Hari Sekhon
#  Date: 2023-05-18 05:26:02 +0100 (Thu, 18 May 2023)
#
#  https://github.com/HariSekhon/Diagrams-as-Code
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help steer this or other code I publish
#
#  https://www.linkedin.com/in/HariSekhon
#

# ============================================================================ #
#                 K u b e r n e t e s   I n t e g r a t i o n s
# ============================================================================ #

direction: down

title: {
  label: Kubernetes Integrations
  near: top-center
  shape: text
  style.font-size: 40
  style.underline: true
}

classes: {
  github: {
    label: GitHub
    icon: https://icons.terrastruct.com/dev%2Fgithub.svg
    # icon: https://icons.terrastruct.com/social%2F039-github.svg
    shape: image
  }
  cicd: {
    label: CI/CD
    icon: https://diagrams.mingrammer.com/img/resources/onprem/ci/github-actions.png
    shape: image
  }
  jenkins: {
    label: Jenkins
    icon: https://diagrams.mingrammer.com/img/resources/onprem/ci/jenkins.png
    shape: image
  }
  k8s: {
    label: Kubernetes
    icon: https://icons.terrastruct.com/azure%2F_Companies%2FKubernetes.svg
    shape: image
  }
  argocd: {
    label: ArgoCD
    icon: https://diagrams.mingrammer.com/img/resources/onprem/gitops/argocd.png
    shape: image
  }
  ingress: {
    label: Kubernetes Ingress
    icon: https://diagrams.mingrammer.com/img/resources/k8s/network/ing.png
    shape: image
  }
  service: {
    label: Kubernetes Service
    icon: https://diagrams.mingrammer.com/img/resources/k8s/network/svc.png
    shape: image
  }
  pod: {
    label: Kubernetes Pod
    icon: https://diagrams.mingrammer.com/img/resources/k8s/compute/pod.png
    shape: image
  }
  nginx: {
    label: Nginx
    # icon: https://icons.terrastruct.com/dev%2Fnginx.svg
    icon: https://diagrams.mingrammer.com/img/resources/onprem/network/nginx.png
    shape: image
  }
  traefik: {
    label: Traefik
    icon: https://diagrams.mingrammer.com/img/resources/onprem/network/traefik.png
    shape: image
  }
  kong: {
    label: Kong
    icon: https://diagrams.mingrammer.com/img/resources/onprem/network/kong.png
    shape: image
  }
  kustomize: {
    label: Kustomize
    icon: https://diagrams.mingrammer.com/img/resources/k8s/ecosystem/kustomize.png
    shape: image
  }
  helm: {
    label: Helm
    icon: https://diagrams.mingrammer.com/img/resources/k8s/ecosystem/helm.png
    shape: image
  }
  certmanager: {
    label: Cert Manager
    icon: https://diagrams.mingrammer.com/img/resources/onprem/certificates/cert-manager.png
    shape: image
  }
  letsencrypt: {
    label: Lets Encrypt
    icon: https://diagrams.mingrammer.com/img/resources/onprem/certificates/lets-encrypt.png
    shape: image
  }
  externaldns: {
    label: External DNS
    icon: https://diagrams.mingrammer.com/img/resources/k8s/ecosystem/external-dns.png
    shape: image
  }
  dns: {
    label: DNS
    icon: https://icons.terrastruct.com/gcp%2FProducts%20and%20services%2FNetworking%2FCloud%20DNS.svg
    # icon: https://diagrams.mingrammer.com/img/resources/gcp/network/dns.png
    # icon: https://icons.terrastruct.com/azure%2FNetworking%20Service%20Color%2FDNS%20Zones.svg
    # icon: https://icons.terrastruct.com/aws%2FNetworking%20&%20Content%20Delivery%2FAmazon-Route-53.svg
    # icon: https://diagrams.mingrammer.com/img/resources/azure/network/dns-zones.png
    shape: image
  }
  cloudflare: {
    label: Cloudflare DNS
    icon: https://diagrams.mingrammer.com/img/resources/saas/cdn/cloudflare.png
    shape: image
  }
  internet: {
    label: Internet
    icon: https://icons.terrastruct.com/infra%2F022-hosting.svg
    shape: image
  }
  aws: {
    label: AWS
    icon: https://icons.terrastruct.com/dev%2Famazonwebservices.svg
    # icon: https://icons.terrastruct.com/aws%2F_Group%20Icons%2FAWS-Cloud-alt_light-bg.svg
    shape: image
  }
  eks: {
    label: EKS
    icon: https://diagrams.mingrammer.com/img/resources/aws/compute/elastic-kubernetes-service.png
    shape: image
  }
  ecr: {
    label: AWS Elastic Container Registry
    # square corners
    # icon: https://icons.terrastruct.com/aws%2FCompute%2FAmazon-EC2-Container-Registry.svg
    # round corners
    icon: https://diagrams.mingrammer.com/img/resources/aws/compute/ec2-container-registry.png
    shape: image
  }
  route53: {
    label: Route 53
    icon: https://diagrams.mingrammer.com/img/resources/aws/network/route-53.png
    shape: image
  }
  aws_secret: {
    label: AWS Secrets Manager
    icon: https://icons.terrastruct.com/aws%2FSecurity%2C%20Identity%2C%20&%20Compliance%2FAWS-Secrets-Manager.svg
    shape: image
  }
  gcp: {
    label: GCP
    icon: https://cdn-icons-png.flaticon.com/512/873/873117.png
    # icon: https://lirp.cdn-website.com/aa0ef369/dms3rep/multi/opt/google-cloud-icon-400w.png
    shape: image
  }
  gke: {
    label: GKE
    # icon: https://icons.terrastruct.com/gcp%2FProducts%20and%20services%2FCompute%2FKubetnetes%20Engine.svg
    # nicer: 3d, more distinguished from rest of d2 gcp icon set
    icon: https://diagrams.mingrammer.com/img/resources/gcp/compute/kubernetes-engine.png
    shape: image
  }
  gcr: {
    label: GCR
    # dark filled
    icon: https://icons.terrastruct.com/gcp%2FProducts%20and%20services%2FDeveloper%20Tools%2FContainer%20Registry.svg
    # light filled
    # icon: https://diagrams.mingrammer.com/img/resources/gcp/devtools/container-registry.png
    shape: image
  }
  clouddns: {
    label: Cloud DNS
    icon: https://icons.terrastruct.com/gcp%2FProducts%20and%20services%2FNetworking%2FCloud%20DNS.svg
    shape: image
  }
  gcp_secret: {
    label: GCP Secret Manager
    icon: https://miro.medium.com/v2/resize:fit:1024/0*eT9wK2hiaOnGLGI9
    # icon: https://images.ctfassets.net/bsbv786nih7n/1kvnUY0O45mFdDkUT0Pow6/0ecd32acbebe8056f88c3dc0a90fb9eb/1_tQKERQdZsjUArxXjaHo9PA.png
    shape: image
  }
  animated: {
    style.animated: true
  }
  dash: {
    style.stroke-dash: 5
  }
  invisible: {
    style.opacity: 0
  }
  http: {
    label: HTTP(S) traffic
    style.animated: true
  }
  proxied: {
    label: HTTPS proxied
    style.animated: true
  }
  registerdns: {
    label: register DNS records for ingresses
    style.animated: true
  }
  pullsecrets: {
    label: pull secrets
    style.animated: true
  }
  argodeploy: {
    label: Deploy Apps
    style.animated: true
  }
}

internet: {
  style.opacity: 0
  internet -> cloudflare: {class: animated}
  internet -> github: {class: invisible}
  internet -> letsencrypt: {class: invisible}
  internet -> _.aws.route53: {class: animated}
  internet -> _.gcp.clouddns: {class: animated}

  internet.class: Internet
  cloudflare.class: Cloudflare
  letsencrypt.class: letsencrypt
  github.class: github
}

aws: AWS {
  aws.class: aws
  route53.class: route53
  secrets_manager.class: aws_secret
  route53 -> secrets_manager -> aws: {class: invisible}
  # secrets_manager -> eks.secrets.secrets {class: pullsecrets}
  eks: EKS Cluster {
    k8s -- eks
    eks.class: eks
    k8s.class: k8s
    ingress: Ingress {
      container.class: ingress
      nginx.class: nginx
      kong.class: kong
      traefik.class: traefik
      container -> kong: {class: invisible}
      nginx -> traefik: {class: invisible}
      _._._.internet.internet -> container: {class: http}
      _._._.internet.cloudflare -> container: {class: proxied}
    }
    certmanager: Cert Manager\npod {
      container.class: certmanager
      container -> _._._.internet.letsencrypt: get free SSL certificates for Ingresses {class: animated}
      container -> _.ingress.container: detect FQDNs to get SSL certs for: {class: animated}
    }
    dns: External DNS {
      pod.class: pod
      dns.class: externaldns
      dns -- pod
      dns -> _._.route53: {class: registerdns}
      dns -> _._._.internet.cloudflare: {class: registerdns}
    }
    secrets: External Secrets {
      pod.class: pod
      secrets.class: aws_secret
      secrets.label: External Secrets
      pod -- secrets
      secrets <- _._.secrets_manager: {class: pullsecrets}
    }
    argocd: ArgoCD pods {
      container.class: argocd
      container -> _.k8s: Deploy App {class: argodeploy}
      _._._.internet.github -> container
    }
  }
}

gcp: GCP {
  gcp.class: gcp
  clouddns.class: clouddns
  secrets_manager.class: gcp_secret
  clouddns -> secrets_manager -> gcp: {class: invisible}
  # secrets_manager -> gke.secrets.secrets: {class: pullsecrets}
  gke: GKE Cluster {
    k8s -- gke
    gke.class: gke
    k8s.class: k8s
    ingress: Ingress {
      container.class: ingress
      nginx.class: nginx
      kong.class: kong
      traefik.class: traefik
      container -> kong: {class: invisible}
      nginx -> traefik: {class: invisible}
      _._._.internet.internet -> container: {class: http}
      _._._.internet.cloudflare -> container: {class: proxied}
    }
    certmanager: Cert Manager\npod {
      container.class: certmanager
      container -> _._._.internet.letsencrypt: get free SSL certificates for Ingresses {class: animated}
      container -> _.ingress.container: detect FQDNs to get SSL certs for: {class: animated}
    }
    dns: External DNS {
      pod.class: pod
      dns.class: externaldns
      dns -- pod
      dns -> _._.clouddns: {class: registerdns}
      dns -> _._._.internet.cloudflare: {class: registerdns}
    }
    secrets: External Secrets {
      pod.class: pod
      secrets.class: gcp_secret
      secrets.label: External Secrets
      pod -- secrets
      secrets <- _._.secrets_manager: {class: pullsecrets}
    }
    argocd: ArgoCD pods {
      container.class: argocd
      container -> _.k8s: Deploy App {class: argodeploy}
      _._._.internet.github -> container
    }
  }
}
