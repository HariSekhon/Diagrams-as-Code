#!/usr/bin/env d2 --theme 200
#
#  vim:ts=2:sts=2:sw=2:et:filetype=d2
#
#  Author: Hari Sekhon
#  Date: 2024-08-25 03:45:23 +0200 (Sun, 25 Aug 2024)
#
#  https///github.com/HariSekhon/Diagrams-as-Code
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help steer this or other code I publish
#
#  https://www.linkedin.com/in/HariSekhon
#

# ============================================================================ #
#                   E l a s t i c s e a r c h   Q u e r i e s
# ============================================================================ #

direction: right

title: {
  label: Elasticsearch Queries
  near: top-center
  shape: text
  style.font-size: 40
  style.underline: true
}

classes: {
  users: {
    label: Users
    icon: https://icons.terrastruct.com/essentials%2F359-users.svg
    # icon: https://diagrams.mingrammer.com/img/resources/onprem/client/users.png
    shape: image
  }
  elasticsearch: {
    icon: https://diagrams.mingrammer.com/img/resources/elastic/saas/elastic.png
    shape: image
  }
  kibana: {
    label: Kibana
    icon: https://diagrams.mingrammer.com/img/resources/elastic/elasticsearch/kibana.png
    shape: image
  }
}

es_node1: Elasticsearch\nClient Node\n(Query Coordinator\n& Aggregator) {
  class: elasticsearch
}

es_node2: Elasticsearch\nData Node 1 {
  class: elasticsearch
}
es_node3: Elasticsearch\nData Node 2 {
  class: elasticsearch
}

es_node4: Elasticsearch\nMaster Node {
  class: elasticsearch
}

kibana.class: kibana
users.class: users

users -> kibana: UI\nSearch

kibana -> es_node1: API\nquery

users -> es_node1: API\nquery

es_node1 -> es_node2: query
es_node1 -> es_node3: query

es_node1 <- es_node2: response
es_node1 <- es_node3: response

es_node2 -- es_node4: shard management
es_node3 -- es_node4: shard maangement
